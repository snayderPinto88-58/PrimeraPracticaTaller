// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using UniversidadApi.Context;

#nullable disable

namespace UniversidadApi.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("UniversidadApi.Models.Docentes", b =>
                {
                    b.Property<int>("Id_docente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id_docente"));

                    b.Property<int>("Id_universidad")
                        .HasColumnType("integer");

                    b.Property<string>("apellido")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ci")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("sexo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ubicacion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id_docente");

                    b.HasIndex("Id_universidad");

                    b.ToTable("docentes");
                });

            modelBuilder.Entity("UniversidadApi.Models.Estudiantes", b =>
                {
                    b.Property<int>("Id_estudiante")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id_estudiante"));

                    b.Property<int>("Id_universidad")
                        .HasColumnType("integer");

                    b.Property<string>("apellido")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("edad")
                        .HasColumnType("integer");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("sexo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id_estudiante");

                    b.HasIndex("Id_universidad");

                    b.ToTable("estudiantes");
                });

            modelBuilder.Entity("UniversidadApi.Models.Universidad", b =>
                {
                    b.Property<int>("Id_universidad")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id_universidad"));

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id_universidad");

                    b.ToTable("universidad");
                });

            modelBuilder.Entity("UniversidadApi.Models.Docentes", b =>
                {
                    b.HasOne("UniversidadApi.Models.Universidad", "Universidad")
                        .WithMany()
                        .HasForeignKey("Id_universidad")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Universidad");
                });

            modelBuilder.Entity("UniversidadApi.Models.Estudiantes", b =>
                {
                    b.HasOne("UniversidadApi.Models.Universidad", "Universidad")
                        .WithMany()
                        .HasForeignKey("Id_universidad")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Universidad");
                });
#pragma warning restore 612, 618
        }
    }
}
